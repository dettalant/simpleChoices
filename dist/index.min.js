/*!
 *   simpleChoices.js
 *
 * @author dettalant
 * @version v0.1.0
 * @license MIT License
 */
"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const createDiv=e=>{const t=document.createElement("div");return e&&(t.className=e),t},createSpan=e=>{const t=document.createElement("span");return e&&(t.className=e),t},createButton=e=>{const t=document.createElement("button");return e&&(t.className=e),t.type="button",t},setAriaSelected=(e,t)=>e.setAttribute("aria-selected",t.toString()),setAriaExpanded=(e,t)=>e.setAttribute("aria-expanded",t.toString());class SimpleSelectBuilder{constructor(e={}){this.classNames=Object.assign(this.defaultSelectClassNames,e)}get defaultSelectClassNames(){return{container:"simpleSelect_container",label:"simpleSelect_label",wrapper:"simpleSelect_wrapper",itemWrapper:"simpleSelect_itemWrapper",item:"simpleSelect_item",current:"simpleSelect_currentItem"}}create(e,t,i){const s=this.genSelectElements(e,t,i);return new SimpleSelect(s,t)}genSelectElements(e,t,i=""){const s=this.classNames,r=createButton(s.container+" "+i),n=createSpan(s.label);n.textContent=e;const a=createDiv(s.wrapper),c=createSpan(s.current);c.textContent=t[0].label;const l=createDiv(s.itemWrapper);[r,l].forEach(e=>setAriaExpanded(e,!1));const o=t.map((e,t)=>{const i=s.item+" "+s.item+t,r=createDiv(i);return r.textContent=e.label,r.dataset.itemIdx=t.toString(),setAriaSelected(r,0===t),l.appendChild(r),r});return[c,l].forEach(e=>a.appendChild(e)),[n,a].forEach(e=>r.appendChild(e)),{container:r,label:n,current:c,wrapper:a,itemWrapper:l,items:o}}}class SimpleSelect{constructor(e,t){this._currentIdx=0,this.isActive=!1,this.el=e,this.items=t,this.applyEventListeners()}dispatchSelectItemEvent(e){const t=new CustomEvent("SimpleSelectItemEvent",{detail:this.items[e].value});this.el.container.dispatchEvent(t)}updateHighlightItem(e){if(e>=this.el.items.length)return;this.el.items.forEach(e=>{setAriaSelected(e,!1)});const t=this.el.items[e];setAriaSelected(t,!0),this._currentIdx=e}updateCurrentItem(e){const t=this.items[e];t&&(this.el.current.textContent=t.label)}showDropdown(){const{container:e,itemWrapper:t}=this.el;[e,t].forEach(e=>setAriaExpanded(e,!0)),this.isActive=!0}hideDropdown(){requestAnimationFrame(()=>{const{container:e,itemWrapper:t}=this.el;[e,t].forEach(e=>setAriaExpanded(e,!1)),this.isActive=!1})}onKeyDownHandler(e){if(e.stopPropagation(),!this.isActive)return void this.showDropdown();const t="ArrowDown"===e.key||40===e.keyCode,i="ArrowUp"===e.key||38===e.keyCode,s="Enter"===e.key||13===e.keyCode;if(i){const e=this._currentIdx>0?--this._currentIdx:0;this.updateHighlightItem(e)}else if(t){const e=this._currentIdx<this.items.length-1?++this._currentIdx:this._currentIdx;this.updateHighlightItem(e)}else if(s){const e=this._currentIdx;this.updateCurrentItem(e),this.dispatchSelectItemEvent(e),this.hideDropdown()}}applyEventListeners(){const{container:e,items:t}=this.el;e.addEventListener("blur",()=>{this.hideDropdown()}),e.addEventListener("click",()=>{this.isActive?this.hideDropdown():this.showDropdown()}),e.addEventListener("keydown",e=>this.onKeyDownHandler(e)),t.forEach(e=>{e.addEventListener("mouseenter",()=>{const t=parseInt(e.dataset.itemIdx||"",10);this.updateHighlightItem(t)}),e.addEventListener("click",()=>{const t=parseInt(e.dataset.itemIdx||"",10);this.updateCurrentItem(t),this.dispatchSelectItemEvent(t)})})}}exports.SimpleSelectBuilder=SimpleSelectBuilder;
